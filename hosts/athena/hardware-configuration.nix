# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config
, lib
, modulesPath
, ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "ntfs3" ];

  swapDevices = [{
    device = "/swap/swapfile";
    size = 32 * 1024;
  }];

  fileSystems."/win" = {
    device = "/dev/disk/by-partlabel/Win11";
    fsType = "ntfs3";
    options =
      let
        uid = if config.users.users.akos.uid == null then "1000" else toString config.users.users.akos.uid;
        gid = if config.users.groups.users.gid == null then "100" else toString config.users.groups.users.gid;
      in
      [
        "rw"
        "uid=${uid}"
        "gid=${gid}"
        "umask=077"
      ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
